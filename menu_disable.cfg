# This file disables some of the stock default LCD menus


### menu octoprint ###
[menu __main __octoprint]
type: list
enable: False
name: OctoPrint


### menu octoprint pause ###
#[menu __main __octoprint __pause]
#type: command
#enable: {printer.idle_timeout.state == "Printing"}
#name: Pause printing
#gcode:
#    {action_respond_info('action:pause')}


### menu octoprint resume ###
#[menu __main __octoprint __resume]
#type: command
#enable: {not printer.idle_timeout.state == "Printing"}
#name: Resume printing
#gcode:
#    {action_respond_info('action:resume')}


### menu octoprint abort ###
#[menu __main __octoprint __abort]
#type: command
#enable: {printer.idle_timeout.state == "Printing"}
#name: Abort printing
#gcode:
#    {action_respond_info('action:cancel')}


### menu control case light ###
# [menu __main __control __caselightonoff]
# type: input
# enable: False
# enable: {'output_pin caselight' in printer}
# name: Lights: {'ON ' if menu.input else 'OFF'}
# input: {printer['output_pin caselight'].value}
# input_min: 0
# input_max: 1
# input_step: 1
# gcode:
#    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}


### menu control case light pwm ###
# [menu __main __control __caselightpwm]
# type: input
# enable: False
#enable: {'output_pin caselight' in printer}
# name: Lights: {'%3d' % (menu.input*100)}%
#input: {printer['output_pin caselight'].value}
#input_min: 0.0
#input_max: 1.0
#input_step: 0.01
#gcode:
#    SET_PIN PIN=caselight VALUE={menu.input}


### menu temperature extruder #2 ###
[menu __main __temp __hotend1_target]
type: input
enable: False
#enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name: {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
#input: {printer.extruder1.target}
#input_min: 0
#input_max: {printer.configfile.config.extruder1.max_temp}
#input_step: 1
#gcode: M104 T1 S{'%.0f' % menu.input}


# [menu __main __temp __preheat_abs]
type: list
name: Preheat ABS
enable: False

# [menu __main __temp __preheat_abs __all]
# type: command
# enable: {('extruder' in printer) and ('heater_bed' in printer)}
# name: Preheat all
# gcode:
#     M140 S110
#     M104 S245

# [menu __main __temp __preheat_abs __hotend]
# type: command
# enable: {'extruder' in printer}
# name: Preheat hotend
# gcode: M104 S245

# [menu __main __temp __preheat_abs __hotbed]
# type: command
# enable: {'heater_bed' in printer}
# name: Preheat hotbed
# gcode: M140 S110


### menu calibrate delta calibrate auto ###
[menu __main __setup __calib __delta_calib_auto]
type: command
enable: False
# enable: {not printer.idle_timeout.state == "Printing"}
name: Delta cal. auto
# gcode:
#     G28
#     DELTA_CALIBRATE

# [menu __main __setup __calib __delta_calib_man]
type: list
# enable: {not printer.idle_timeout.state == "Printing"}
name: Delta cal. man
enable: False


### menu calibrate delta calibrate start ###
# [menu __main __setup __calib __delta_calib_man __start]
# type: command
# name: Start probing
# gcode:
#     G28
#     DELTA_CALIBRATE METHOD=manual


### menu calibrate delta calibrate ###
# [menu __main __setup __calib __delta_calib_man __move_z]
# type: input
# name: Move Z: {'%03.2f' % menu.input}
# input: {printer.gcode_move.gcode_position.z}
# input_step: 1
# realtime: True
# gcode:
#     {%- if menu.event == 'change' -%}
#         G1 Z{'%.2f' % menu.input}
#     {%- elif menu.event == 'long_click' -%}
#         G1 Z{'%.2f' % menu.input}
#         SAVE_GCODE_STATE NAME=__move__axis
#         G91
#         G1 Z2
#         G1 Z-2
#         RESTORE_GCODE_STATE NAME=__move__axis
#     {%- endif -%}


### menu calibrate delta calibrate ###
# [menu __main __setup __calib __delta_calib_man __test_z]
# type: input
# name: Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
# input: 6
# input_min: 0
# input_max: 11
# input_step: 1
# gcode:
#     {%- if menu.event == 'long_click' -%}
#         TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
#     {%- endif -%}


### menu calibrate delta calibrate ###
# [menu __main __setup __calib __delta_calib_man __accept]
# type: command
# name: Accept
# gcode: ACCEPT


### menu calibrate delta calibrate ###
# [menu __main __setup __calib __delta_calib_man __abort]
# type: command
# name: Abort
# gcode: ABORT


### menu calibrate delta calibrate ###
[menu __main __setup __dump]
type: command
name: Dump parameters
enable: False
# gcode:
#    {% for name1 in printer %}
#       {% for name2 in printer[name1] %}
#          { action_respond_info("printer['%s'].%s = %s"
#                                % (name1, name2, printer[name1][name2])) }
#       {% else %}
#          { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
#       {% endfor %}
#    {% endfor %}
 

 