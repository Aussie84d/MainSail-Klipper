# This file contains common pin mappings for the BIGTREETECH SKR V1.3 board.
# To use this config, the firmware should be compiled for the LPC1768.

# BTT SKR 1.3 on a Maker Select v2.1 w/BLTouch v3 and dual Z-Steppers

# https://github.com/KevinOConnor/klipper/blob/master/config/printer-wanhao-duplicator-i3-v2.1-2017.cfg
# https://github.com/KevinOConnor/klipper/blob/master/config/generic-bigtreetech-skr-v1.3.cfg
# https://pastebin.com/yrpmaJca - Ender 3 example


########################################
# Main
########################################

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: !P1.29  # P1.28 for X-max
position_endstop: 0
position_max: 200
homing_speed: 40

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: !P1.27  # P1.26 for Y-max
position_endstop: 0
position_max: 200
homing_speed: 40

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 8
# You need this to be below zero because with a Z probe,
# the Z axis may need to go below zero (due to probe offset):
position_min: -5
position_max: 180
endstop_pin: probe:z_virtual_endstop
homing_speed: 20

[stepper_z1]
step_pin: P0.1
dir_pin: P0.0
enable_pin: !P0.10
microsteps: 16
rotation_distance: 8

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 200.0
heater_pin: P2.7
sensor_type: NTC 100K beta 3950
sensor_pin: PA7
sensor_pin: P0.24
control: pid
pid_Kp: 18.214030
pid_Ki: 0.616380
pid_Kd: 134.556146
min_temp: 0
max_temp: 270

#[extruder1]
#step_pin: P0.1
#dir_pin: P0.0
#enable_pin: !P0.10
#heater_pin: P2.4
#sensor_pin: P0.25
#...

[heater_bed]
heater_pin: P2.5
sensor_type: NTC 100K beta 3950
sensor_pin: P0.23
control: pid
pid_Kp: 71.321
pid_Ki: 1.989
pid_Kd: 639.210
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

# main Klipper interface, made when you installed Klipper
[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1768_11B00002440C39AF0427E75BC42000F5-if00

# Using a Raspberry Pi as a secondary MCU, so we can use GPIOs
[mcu rpi]
serial: /tmp/klipper_host_mcu

# Marlin default feedrates X,Y - 300 / Z - 20 / E - 50
# Marlin default accel X,Y - 3000 / Z - 100 / E - 10000

[printer]
kinematics: cartesian
max_velocity: 400 # in mm/s - default 300
max_accel: 2000 # in mm/s^2 - default 1500
max_z_velocity: 20 # in mm/s - default 5
max_z_accel: 200 # in mm/s^2 - default 200


########################################
# TMC2208 configuration
########################################

[tmc2208 stepper_x]
uart_pin: P1.17
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[tmc2208 stepper_y]
uart_pin: P1.15
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[tmc2208 stepper_z]
uart_pin: P1.10
run_current: 0.750
hold_current: 0.450
stealthchop_threshold: 30

[tmc2208 stepper_z1]
uart_pin: P1.1
run_current: 0.750
hold_current: 0.450
stealthchop_threshold: 30

[tmc2208 extruder]
uart_pin: P1.8
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 5

#[tmc2208 extruder1]
#uart_pin: P1.1
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5


########################################
# EXP1 / EXP2 (display) pins
########################################

# for the SKR 1.3
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

# See the sample-lcd.cfg file for definitions of common LCD displays.
# https://github.com/KevinOConnor/klipper/blob/master/config/sample-lcd.cfg

# Standard 12864 LCD
[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
# kill_pin: ^!EXP2_8

[output_pin beeper]
pin: EXP1_1


########################################
# BLTouch Configuration - https://github.com/KevinOConnor/klipper/blob/master/config/sample-probe-as-z-endstop.cfg
########################################

# BLTouch V3 (original) running in open drain mode
# SKR 1.3 reference: https://github.com/bigtreetech/BIGTREETECH-SKR-V1.3/blob/master/hardware/SKR-V1.3-PIN.pdf
# BLTouch 3.0 reference: https://docs.wixstatic.com/ugd/f5a1c8_26f2661f0a4542eaacc1586eba8842e7.pdf
# According to this, when the USB is facing towards you, servo pins should be (left to right) colored red (power)-brown (ground)-orange (control pin)
# and the Zmin plug should be (top to bottom) power pin (leave empty), black wire (ground), white wire (sensor pin).

[bltouch]
sensor_pin: ^P1.25 # Pull-up (^ symbol) needed in open drain mode
control_pin: P2.0
pin_up_touch_mode_reports_triggered: False
#probe_with_touch_mode: True
set_output_mode: 5V
x_offset: -26
y_offset: -45
z_offset: 2.4
speed: 3.0
samples: 1

# Z-safe homing that (1) moves the probe up 15mm (2) home XY (3) move to center of bed (4) home Z
# Edit the X100 Y100 for your own center of bed
[homing_override]
axes: z
gcode:
    G90
    G1 Z15
    G28 X Y
    G1 X100 Y100 F6000
    G28 Z
set_position_z: 0.0

#[safe_z_home]
#home_xy_position: 100,100
#speed: 50
#z_hop: 15
#z_hop_speed: 5


########################################
# Bed Mesh and Leveling
########################################

# Example bed_tilt config section
#[bed_tilt]
#points:
#    100,100
#    10,10
#    10,100
#    10,190
#    100,10
#    100,190
#    190,10
#    190,100
#    190,190

# Example bed_mesh config section
[bed_mesh]
speed: 250
horizontal_move_z: 10
mesh_min: 50,50
mesh_max: 150,150
probe_count: 5,5
algorithm: bicubic
bicubic_tension: .1
relative_reference_index: 0
fade_start: 0.6
fade_end: 10.0
mesh_pps: 2,2


########################################
# Bed Screw Adjustments
########################################

# This adds a screw tilt adjust command that probes certain points on the bed and recommends new bed screw positions (turn clockwise this much etc)
[screws_tilt_adjust]
screw1: 50,50
screw1_name: Front left screw
screw2: 50,200
screw2_name: Rear left screw
screw3: 200,50
screw3_name: Front right screw
screw4: 200,200
screw4_name: Rear right screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M3

# ender 3 bed screws example
# [screws_tilt_adjust]
# screw1: 70.5,37.5
# screw1_name: front left screw
# screw2: 240,37.5
# screw2_name: front right screw
# screw3: 240,207.5
# screw3_name: rear right screw
# screw4: 70.5,207.5
# screw4_name: rear left screw
# horizontal_move_z: 10
# speed: 50
# screw_thread: CW-M4

# This adds a bed screws adjust GCode, that moves the nozzle around for you so you can paper adjust.
[bed_screws]
screw1: 31,37
screw1_name: Front left screw
screw2: 31,200
screw2_name: Rear left screw
screw3: 200,200
screw3_name: Rear right screw
screw4: 200,37
screw4_name: Front right screw


########################################
# Misc
########################################

[virtual_sdcard]
path: /home/pi/virtual_sdcard

# Filament Runout Wired to X-max stop but you can pick any pin you want.
#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#switch_pin: ^!P1.28

#filament runout sensor
# https://www.reddit.com/r/ender5plus/comments/kb5oe9/klipper_m600_filament_change/
[filament_switch_sensor filament_sensor]
switch_pin: ^!P1.28
pause_on_runout: false #pause handled by macro
runout_gcode:
  M600 #calls a macro with the name M600 (so it can be called by slicers too)
insert_gcode:
  M117 Filament inserted #just a throwaway GCode command to have something in this space. You can add your own.
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
pause_delay: 0.0001

# This adds pause/resume support
[pause_resume]
recover_velocity: 50
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[display_status]

# This adds the 'respond' G-Code that you can use to send commands back to OctoPrint
[respond]
default_type: echo

# This enables a 'force_move' command ignoring all homing, Z-stops etc. Useful in debugging.
[force_move]
enable_force_move: True


#[temperature_sensor my_sensor]
#sensor_type: HTU21D
# QUERY_HTU21D SENSOR='htu21d my_sensor'


#[temperature_sensor my_sensor2]
#sensor_type: BME280
#gcode_id: AMB
# QUERY_BME280 SENSOR='bme280 my_sensor2'

# [temperature_sensor enclosure_temperaure]
# sensor_type: DHT22
# QUERY_DHT22 SENSOR='dht22 enclosure_temperature'


########################################
# Include Config Files
########################################

# include my custom menu
[include menu_custom.cfg]

# include disable menu - disables some default menus
[include menu_disable.cfg]

# include macros
[include macros.cfg]

# include GPIO macros
[include macros_gpio.cfg]

# include button macros
[include macros_buttons.cfg]

# include calibration menu items
# [include menu_calibration.cfg]

# include control menu items
# [include menu_control.cfg]

# include filament menu items
# [include menu_filament.cfg]

# include temperature menu items
# [include menu_temperature.cfg]


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.000000, 0.022500, 0.017500, -0.055000, -0.162500
#*# 	  -0.042500, 0.077500, 0.080000, 0.012500, -0.077500
#*# 	  0.005000, 0.100000, 0.157500, 0.100000, 0.017500
#*# 	  0.097500, 0.190000, 0.232500, 0.172500, 0.090000
#*# 	  0.227500, 0.307500, 0.327500, 0.260000, 0.177500
#*# tension = 0.1
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 150.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
