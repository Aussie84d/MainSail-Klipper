
########################################
# GPIO Macros - https://github.com/KevinOConnor/klipper/blob/master/config/sample-raspberry-pi.cfg
########################################

# Turns on my printers light
# Example1: A led strip controlled by the GPIO20 on the RPi
[output_pin printlight]
pin: rpi:gpio18
# You can also write the pin in extended form by specifying
# the reference gpiochip.
#pin: host:gpiochip0/gpio20


# Turns on my printers light
[gcode_macro TOGGLE_PRINTLIGHT]
gcode:
  SET_PIN PIN=printlight VALUE={(not printer['output_pin printlight'].value)|int}


# Turns on the light on the printer stand
[output_pin printerstand]
pin: rpi:gpio27
# You can also write the pin in extended form by specifying
# the reference gpiochip.
#pin: host:gpiochip0/gpio20


# Turns on the light on the printer stand
[gcode_macro TOGGLE_PRINTERSTAND]
gcode:
  SET_PIN PIN=printerstand VALUE={(not printer['output_pin printerstand'].value)|int}


# Lets show the temp of the RPi CPU on the temp graph (old way)
# [temperature_sensor raspberry_pi]
# sensor_type: temperature_host
# min_temp: 10
# max_temp: 100


# Lets show the temp of the RPi CPU on the temp graph (new way)
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
min_temp: 10
max_temp: 100


# [temperature_sensor enclosure_temp]
# pin: rpi:gpio4
# sensor_type: dht_temperature


########################################
# Temperature Sensors
########################################


# Example2: Using the i2c bus of the RPi to read a sensor
# [temperature_sensor enclosure_temp]
# sensor_type: HTU21D
# i2c_mcu: host
# i2c_bus: i2c.1
# htu21d_hold_master: False


# [gcode_macro QUERY_ENCLOSURE]
# default_parameter_SENSOR: htu21d enclosure_temp
# gcode:
#     {action_respond_info(
#         "Temperature: %.2f C\n"
#         "Humidity: %.2f%%" % (
#             printer[SENSOR].temperature,
#             printer[SENSOR].humidity))}


### HTU21D temp/humidity probe ###
# *Requires you to ucomment the HTU21D sensor section in printer.cfg
# [gcode_macro QUERY_HTU21D]
# default_parameter_SENSOR: htu21d my_sensor
# gcode:
#     {action_respond_info(
#         "Temperature: %.2f C\n"
#         "Humidity: %.2f%%" % (
#             printer[SENSOR].temperature,
#             printer[SENSOR].humidity))}


### BME280 temp/humidity probe ###
# *Requires you to ucomment the BME280 sensor section in printer.cfg
# [gcode_macro QUERY_BME280]
# default_parameter_SENSOR: bme280 my_sensor
# gcode:
#     {action_respond_info(
#         "Temperature: %.2f C\n"
#         "Pressure: %.2f hPa\n"
#         "Humidity: %.2f%%" % (
#             printer[SENSOR].temperature,
#             printer[SENSOR].pressure,
#             printer[SENSOR].humidity))}


# Custom ADC temperature sensors (one may define any number of sections with an “adc_temperature” prefix).
# This allows one to define a custom temperature sensor that measures a voltage on an Analog to Digital Converter
# (ADC) pin and uses linear interpolation between a set of configured temperature/voltage (or temperature/resistance)
# measurements to determine the temperature. The resulting sensor can be used as a sensor_type in a heater section.
# (For example, if one defines a “[adc_temperature my_sensor]” section then one may use a “sensor_type: my_sensor”
# when defining a heater.) Be sure to place the sensor section in the config file above its first use in a heater section.


# [adc_temperature my_sensor]
# temperature1:
# voltage1:
# temperature2:
# voltage2:
# ...
#   A set of temperatures (in Celsius) and voltages (in Volts) to use
#   as reference when converting a temperature. A heater section using
#   this sensor may also specify adc_voltage and voltage_offset
#   parameters to define the ADC voltage (see "Common temperature
#   amplifiers" section for details). At least two measurements must
#   be provided.
# temperature1:
# resistance1:
# temperature2:
# resistance2:
# ...
#   Alternatively one may specify a set of temperatures (in Celsius)
#   and resistance (in Ohms) to use as reference when converting a
#   temperature. A heater section using this sensor may also specify a
#   pullup_resistor parameter (see "extruder" section for details). At
#   least two measurements must be provided.


# [temperature_sensor my_sensor]
# sensor_type:
# sensor_pin:
# min_temp:
# max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
# gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.


